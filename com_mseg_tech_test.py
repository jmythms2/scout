#!/usr/bin/env python3

# Import code to be tested
import com_mseg_tech as cmt

# Import packages
import unittest
import numpy as np


class CommonUnitTest(unittest.TestCase):
    """ Top level test class that contains common variables with data so
    that all tests are easily set up to use a consistent body of data """

    # Define an array taking the form of the EIA cost, performance, and
    # lifetime data, but with a reduced set of columns incorporating only
    # the data required as final outputs
    tech_data = np.array([
        (1, 1, 1, 1, 1, 0.0090, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 2, 1, 1, 0.0289, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 3, 1, 1, 0.0135, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 4, 1, 1, 0.0150, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 5, 1, 1, 0.1578, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 6, 1, 1, 0.1002, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 7, 1, 1, 0.0578, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 8, 1, 1, 0.0271, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 1, 9, 1, 1, 0.0693, 3.10, 67.78, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
        (1, 2, 1, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 2, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 3, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 4, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 5, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 6, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 7, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 8, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 2, 9, 1, 1, 0, 3.25, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
        (1, 3, 1, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 2, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 3, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 4, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 5, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 6, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 7, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 8, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 3, 9, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
        (1, 4, 1, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 2, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 3, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 4, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 5, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 6, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 7, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 8, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 4, 9, 1, 1, 0, 3.35, 83.61, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
        (1, 5, 1, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 2, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 3, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 4, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 5, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 6, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 7, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 8, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 5, 9, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2003,
         2052, 1, 'rooftop_ASHP-heat 2013 high'),
        (1, 6, 1, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 2, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 3, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 4, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 5, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 6, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 7, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 8, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 6, 9, 1, 1, 0, 3.30, 81.39, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 typical'),
        (1, 7, 1, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 2, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 3, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 4, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 5, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 6, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 7, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 8, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (1, 7, 9, 1, 1, 0, 3.40, 102.78, 1.47, 0.00, 0.00, 15, 2020,
         2052, 1, 'rooftop_ASHP-heat 2020 high'),
        (32, 1, 1, 4, 1, 0.2200, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 2, 4, 1, 0.4101, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 3, 4, 1, 0.1273, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 4, 4, 1, 0.2117, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 5, 4, 1, 0.7591, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 6, 4, 1, 0.2862, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 7, 4, 1, 0.7410, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 8, 4, 1, 0.2010, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 9, 4, 1, 0.1371, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 10, 4, 1, 0.1383, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 1, 11, 4, 1, 0.2759, 1.15, 6266.69, 18.94, 0.00, 0.00, 20, 2003,
         2003, 1, 'VAV_Vent 20003 installed base'),
        (32, 2, 1, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 2, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 3, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 4, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 5, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 6, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 7, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 8, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 9, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 10, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 2, 11, 4, 1, 0.0000, 1.26, 6266.69, 18.94, 0.00, 0.00, 20, 2004,
         2052, 1, 'VAV_Vent 2007 installed base'),
        (32, 3, 1, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 2, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 3, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 4, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 5, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 6, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 7, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 8, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 9, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 10, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 3, 11, 4, 1, 0.0000, 1.28, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 minimum'),
        (32, 4, 1, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 2, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 3, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 4, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 5, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 6, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 7, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 8, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 9, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 10, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 4, 11, 4, 1, 0.0000, 1.34, 6266.69, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 typical'),
        (32, 5, 1, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 2, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 3, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 4, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 5, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 6, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 7, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 8, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 9, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 10, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 5, 11, 4, 1, 0.0000, 1.50, 6886.47, 18.94, 0.00, 0.00, 20, 2011,
         2052, 1, 'VAV_Vent 2011 high'),
        (32, 6, 1, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 2, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 3, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 4, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 5, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 6, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 7, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 8, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 9, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 10, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 6, 11, 4, 1, 0.0000, 1.42, 6266.69, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 typical'),
        (32, 7, 1, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 2, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 3, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 4, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 5, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 6, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 7, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 8, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 9, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 10, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 7, 11, 4, 1, 0.0000, 1.59, 6886.47, 18.94, 0.00, 0.00, 20, 2020,
         2052, 1, 'VAV_Vent 2020 high'),
        (32, 8, 1, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 2, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 3, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 4, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 5, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 6, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 7, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 8, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 9, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 10, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 8, 11, 4, 1, 0.0000, 1.50, 6266.69, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 typical'),
        (32, 9, 1, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 2, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 3, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 4, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 5, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 6, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 7, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 8, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 9, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 10, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 9, 11, 4, 1, 0.0000, 1.70, 6886.47, 18.94, 0.00, 0.00, 20, 2030,
         2052, 1, 'VAV_Vent 2030 high'),
        (32, 10, 1, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 2, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 3, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 4, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 5, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 6, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 7, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 8, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 9, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 10, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 10, 11, 4, 1, 0.0000, 1.59, 6266.69, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 typical'),
        (32, 11, 1, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 2, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 3, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 4, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 5, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 6, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 7, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 8, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 9, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 10, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (32, 11, 11, 4, 1, 0.0000, 1.82, 6886.47, 18.94, 0.00, 0.00, 20, 2040,
         2052, 1, 'VAV_Vent 2040 high'),
        (24, 20, 1, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 2, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 3, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 4, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 5, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 6, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 7, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 8, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 9, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 10, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 20, 11, 6, 1, 0.0000, 16.7, 86.30, 9.10, 0.00, 0.00, 15, 2003,
         2012, 1, '70W HIR PAR-38 2003 installed base'),
        (24, 21, 1, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 2, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 3, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 4, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 5, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 6, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 7, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 8, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 9, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 10, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 21, 11, 6, 1, 0.0000, 16.7, 70.63, 7.64, 0.00, 0.00, 15, 2007,
         2012, 1, '70W HIR PAR-38 2007 installed base'),
        (24, 22, 1, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 2, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 3, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 4, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 5, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 6, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 7, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 8, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 9, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 10, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 22, 11, 6, 1, 0.0000, 18.7, 73.56, 12.04, 0.00, 0.00, 15, 2011,
         2052, 1, '70W HIR PAR-38 2011 typical'),
        (24, 23, 1, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 2, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 3, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 4, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 5, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 6, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 7, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 8, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 9, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 10, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 23, 11, 6, 1, 0.0000, 19.6, 69.32, 11.40, 0.00, 0.00, 15, 2020,
         2052, 1, '70W HIR PAR-38 2020 typical'),
        (24, 24, 1, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 2, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 3, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 4, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 5, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 6, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 7, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 8, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 9, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 10, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical'),
        (24, 24, 11, 6, 1, 0.0000, 20.6, 65.36, 10.80, 0.00, 0.00, 15, 2030,
         2052, 1, '70W HIR PAR-38 2030 typical')],
        dtype=[('t', 'i4'), ('v', 'i4'), ('r', 'i4'), ('s', 'i4'), ('f', 'i4'),
               ('Shr', 'f8'), ('eff', 'f8'), ('c1', 'f8'), ('c2', 'f8'),
               ('c3', 'f8'), ('c4', 'f8'), ('Life', 'i4'), ('y1', 'i4'),
               ('y2', 'i4'), ('cost', 'i4'), ('technology name', '<U50')])

    # Define an array of service demand data that are needed to
    # process the technology cost, performance, and lifetime data
    sd_data = 0

    # Define a list of the microsegments converted to numeric indices
    # from the human-readable (i.e., words) category text in the
    # underlying empty JSON database that define what data should be
    # selected from the tech_data and sd_data arrays
    data_to_select = [[3, 6, 1, 1],
                      [2, 8, 4, 1],
                      [9, 5, 6, 1]]
    # Note that the conversion from the category text to numbers isn't
    # tested here since the existing function is already tested separately

    # Define a list of numpy arrays that represent the data selected
    # from the tech_data array based on the data_to_select lists
    selected_data = [
        np.array([
            (1, 1, 3, 1, 1, 0.0135, 3.1, 67.78, 1.47, 0.0, 0.0, 15, 2003,
             2009, 1, 'rooftop_ASHP-heat 2003 installed base'),
            (1, 2, 3, 1, 1, 0.0, 3.25, 81.39, 1.47, 0.0, 0.0, 15, 2003,
             2009, 1, 'rooftop_ASHP-heat 2012 installed base'),
            (1, 3, 3, 1, 1, 0.0, 3.3, 81.39, 1.47, 0.0, 0.0, 15, 2003,
             2052, 1, 'rooftop_ASHP-heat 2013 current standard/ typical'),
            (1, 4, 3, 1, 1, 0.0, 3.35, 83.61, 1.47, 0.0, 0.0, 15, 2003,
             2052, 1, 'rooftop_ASHP-heat 2013 ENERGY STAR'),
            (1, 5, 3, 1, 1, 0.0, 3.4, 102.78, 1.47, 0.0, 0.0, 15, 2003,
             2052, 1, 'rooftop_ASHP-heat 2013 high'),
            (1, 6, 3, 1, 1, 0.0, 3.3, 81.39, 1.47, 0.0, 0.0, 15, 2020,
             2052, 1, 'rooftop_ASHP-heat 2020 typical'),
            (1, 7, 3, 1, 1, 0.0, 3.4, 102.78, 1.47, 0.0, 0.0, 15, 2020,
             2052, 1, 'rooftop_ASHP-heat 2020 high')],
            dtype=[('t', 'i4'), ('v', 'i4'), ('r', 'i4'), ('s', 'i4'),
                   ('f', 'i4'), ('Shr', 'f8'), ('eff', 'f8'),
                   ('c1', 'f8'), ('c2', 'f8'), ('c3', 'f8'), ('c4', 'f8'),
                   ('Life', 'i4'), ('y1', 'i4'), ('y2', 'i4'),
                   ('cost', 'i4'), ('technology name', '<U50')]),
        np.array([
            (32, 1, 8, 4, 1, 0.201, 1.15, 6266.69, 18.94, 0.0, 0.0, 20, 2003,
             2003, 1, 'VAV_Vent 20003 installed base'),
            (32, 2, 8, 4, 1, 0.0, 1.26, 6266.69, 18.94, 0.0, 0.0, 20, 2004,
             2052, 1, 'VAV_Vent 2007 installed base'),
            (32, 3, 8, 4, 1, 0.0, 1.28, 6266.69, 18.94, 0.0, 0.0, 20, 2011,
             2052, 1, 'VAV_Vent 2011 minimum'),
            (32, 4, 8, 4, 1, 0.0, 1.34, 6266.69, 18.94, 0.0, 0.0, 20, 2011,
             2052, 1, 'VAV_Vent 2011 typical'),
            (32, 5, 8, 4, 1, 0.0, 1.5, 6886.47, 18.94, 0.0, 0.0, 20, 2011,
             2052, 1, 'VAV_Vent 2011 high'),
            (32, 6, 8, 4, 1, 0.0, 1.42, 6266.69, 18.94, 0.0, 0.0, 20, 2020,
             2052, 1, 'VAV_Vent 2020 typical'),
            (32, 7, 8, 4, 1, 0.0, 1.59, 6886.47, 18.94, 0.0, 0.0, 20, 2020,
             2052, 1, 'VAV_Vent 2020 high'),
            (32, 8, 8, 4, 1, 0.0, 1.5, 6266.69, 18.94, 0.0, 0.0, 20, 2030,
             2052, 1, 'VAV_Vent 2030 typical'),
            (32, 9, 8, 4, 1, 0.0, 1.7, 6886.47, 18.94, 0.0, 0.0, 20, 2030,
             2052, 1, 'VAV_Vent 2030 high'),
            (32, 10, 8, 4, 1, 0.0, 1.59, 6266.69, 18.94, 0.0, 0.0, 20, 2040,
             2052, 1, 'VAV_Vent 2040 typical'),
            (32, 11, 8, 4, 1, 0.0, 1.82, 6886.47, 18.94, 0.0, 0.0, 20, 2040,
             2052, 1, 'VAV_Vent 2040 high')],
            dtype=[('t', 'i4'), ('v', 'i4'), ('r', 'i4'), ('s', 'i4'),
                   ('f', 'i4'), ('Shr', 'f8'), ('eff', 'f8'),
                   ('c1', 'f8'), ('c2', 'f8'), ('c3', 'f8'), ('c4', 'f8'),
                   ('Life', 'i4'), ('y1', 'i4'), ('y2', 'i4'),
                   ('cost', 'i4'), ('technology name', '<U50')]),
        np.array([
            (24, 20, 5, 6, 1, 0.0, 16.7, 86.3, 9.1, 0.0, 0.0, 15, 2003,
             2012, 1, '70W HIR PAR-38 2003 installed base'),
            (24, 21, 5, 6, 1, 0.0, 16.7, 70.63, 7.64, 0.0, 0.0, 15, 2007,
             2012, 1, '70W HIR PAR-38 2007 installed base'),
            (24, 22, 5, 6, 1, 0.0, 18.7, 73.56, 12.04, 0.0, 0.0, 15, 2011,
             2052, 1, '70W HIR PAR-38 2011 typical'),
            (24, 23, 5, 6, 1, 0.0, 19.6, 69.32, 11.4, 0.0, 0.0, 15, 2020,
             2052, 1, '70W HIR PAR-38 2020 typical'),
            (24, 24, 5, 6, 1, 0.0, 20.6, 65.36, 10.8, 0.0, 0.0, 15, 2030,
             2052, 1, '70W HIR PAR-38 2030 typical')],
            dtype=[('t', 'i4'), ('v', 'i4'), ('r', 'i4'), ('s', 'i4'),
                   ('f', 'i4'), ('Shr', 'f8'), ('eff', 'f8'),
                   ('c1', 'f8'), ('c2', 'f8'), ('c3', 'f8'), ('c4', 'f8'),
                   ('Life', 'i4'), ('y1', 'i4'), ('y2', 'i4'),
                   ('cost', 'i4'), ('technology name', '<U50')])]

    # Define a list of the dicts of performance levels for each
    # technology in the desired form to be output to a JSON database
    result_perf = 0

    # Define a list of years for which the data should be output
    tmp_yrs = list(range(2009, 2041))  # 2009 - 2040

    # Define a list of the dicts of capital cost data to be generated
    # for output to a JSON database
    result_cost = [
        {'typical':
            {'2009': 83.39, '2010': 89.26, '2011': 89.26, '2012': 89.26,
             '2013': 89.26, '2014': 89.26, '2015': 89.26, '2016': 89.26,
             '2017': 89.26, '2018': 89.26, '2019': 89.26, '2020': 90.39,
             '2021': 90.39, '2022': 90.39, '2023': 90.39, '2024': 90.39,
             '2025': 90.39, '2026': 90.39, '2027': 90.39, '2028': 90.39,
             '2029': 90.39, '2030': 90.39, '2031': 90.39, '2032': 90.39,
             '2033': 90.39, '2034': 90.39, '2035': 90.39, '2036': 90.39,
             '2037': 90.39, '2038': 90.39, '2039': 90.39, '2040': 90.39},
         'best':
            {'2009': 102.78, '2010': 102.78, '2011': 102.78, '2012': 102.78,
             '2013': 102.78, '2014': 102.78, '2015': 102.78, '2016': 102.78,
             '2017': 102.78, '2018': 102.78, '2019': 102.78, '2020': 102.78,
             '2021': 102.78, '2022': 102.78, '2023': 102.78, '2024': 102.78,
             '2025': 102.78, '2026': 102.78, '2027': 102.78, '2028': 102.78,
             '2029': 102.78, '2030': 102.78, '2031': 102.78, '2032': 102.78,
             '2033': 102.78, '2034': 102.78, '2035': 102.78, '2036': 102.78,
             '2037': 102.78, '2038': 102.78, '2039': 102.78, '2040': 102.78}},
        {'typical':
            {'2009': 6266.69, '2010': 6266.69, '2011': 6421.635,
             '2012': 6421.635, '2013': 6421.635, '2014': 6421.635,
             '2015': 6421.635, '2016': 6421.635, '2017': 6421.635,
             '2018': 6421.635, '2019': 6421.635, '2020': 6473.2833,
             '2021': 6473.2833, '2022': 6473.2833, '2023': 6473.2833,
             '2024': 6473.2833, '2025': 6473.2833, '2026': 6473.2833,
             '2027': 6473.2833, '2028': 6473.2833, '2029': 6473.2833,
             '2030': 6499.1075, '2031': 6499.1075, '2032': 6499.1075,
             '2033': 6499.1075, '2034': 6499.1075, '2035': 6499.1075,
             '2036': 6499.1075, '2037': 6499.1075, '2038': 6499.1075,
             '2039': 6499.1075, '2040': 6514.602},
         'best':
            {'2009': 6266.69, '2010': 6266.69, '2011': 6886.47,
             '2012': 6886.47, '2013': 6886.47, '2014': 6886.47,
             '2015': 6886.47, '2016': 6886.47, '2017': 6886.47,
             '2018': 6886.47, '2019': 6886.47, '2020': 6886.47,
             '2021': 6886.47, '2022': 6886.47, '2023': 6886.47,
             '2024': 6886.47, '2025': 6886.47, '2026': 6886.47,
             '2027': 6886.47, '2028': 6886.47, '2029': 6886.47,
             '2030': 6886.47, '2031': 6886.47, '2032': 6886.47,
             '2033': 6886.47, '2034': 6886.47, '2035': 6886.47,
             '2036': 6886.47, '2037': 6886.47, '2038': 6886.47,
             '2039': 6886.47, '2040': 6886.47}},
        {'typical':
            {'2009': 78.465, '2010': 78.465, '2011': 76.83, '2012': 76.83,
             '2013': 73.56, '2014': 73.56, '2015': 73.56, '2016': 73.56,
             '2017': 73.56, '2018': 73.56, '2019': 73.56, '2020': 71.44,
             '2021': 71.44, '2022': 71.44, '2023': 71.44, '2024': 71.44,
             '2025': 71.44, '2026': 71.44, '2027': 71.44, '2028': 71.44,
             '2029': 71.44, '2030': 69.413, '2031': 69.413, '2032': 69.413,
             '2033': 69.413, '2034': 69.413, '2035': 69.413, '2036': 69.413,
             '2037': 69.413, '2038': 69.413, '2039': 69.413, '2040': 69.413},
         'best':
            {'2009': 86.30, '2010': 86.30, '2011': 86.30, '2012': 86.30,
             '2013': 73.56, '2014': 73.56, '2015': 73.56, '2016': 73.56,
             '2017': 73.56, '2018': 73.56, '2019': 73.56, '2020': 73.56,
             '2021': 73.56, '2022': 73.56, '2023': 73.56, '2024': 73.56,
             '2025': 73.56, '2026': 73.56, '2027': 73.56, '2028': 73.56,
             '2029': 73.56, '2030': 73.56, '2031': 73.56, '2032': 73.56,
             '2033': 73.56, '2034': 73.56, '2035': 73.56, '2036': 73.56,
             '2037': 73.56, '2038': 73.56, '2039': 73.56, '2040': 73.56}}]

    # Define a list of dicts with the mean and range of equipment
    # lifetimes (in years) for each of the technologies tested
    result_life = 0


class TechnologyDataSelectionTest(CommonUnitTest):
    """ Test the function that selects from the technology data array
    only the rows of data for a specified microsegment """

    # Test that the correct data are returned
    def test_selection_from_technology_data(self):
        for idx, sel in enumerate(self.data_to_select):
            self.assertCountEqual(cmt.tech_data_selector(self.tech_data, sel),
                                  self.selected_data[idx])


class PerformanceDataExtractionTest(CommonUnitTest):
    """ docstring """
    pass


class CostDataExtractionTest(CommonUnitTest):
    """ Test the function that extracts the technology cost data from
    the source data arrays and converts them into the desired form to
    be output to the cost/performance/lifetime JSON """

    # Create a function for checking equality of a dict with point values
    def dict_check(self, dict1, dict2):
        for (k, i), (k2, i2) in zip(sorted(dict1.items()),
                                    sorted(dict2.items())):
            if isinstance(i, dict):
                self.assertCountEqual(i, i2)
                self.dict_check(i, i2)
            else:
                self.assertAlmostEqual(dict1[k], dict2[k2], places=2)

    # Test equality of the dicts of cost data generated for each technology
    def test_cost_selection_and_conversion(self):
        for idx, input_array in enumerate(self.selected_data):
            self.dict_check(cmt.cost_extractor(input_array, self.tmp_yrs),
                            self.result_cost[idx])


class LifetimeDataExtractionTest(CommonUnitTest):
    """ docstring """
    pass


class ChoiceModelParametersExtractionTest(CommonUnitTest):
    """ docstring """
    pass


# Offer external code execution (include all lines below this point in all
# test files)
def main():
    # Triggers default behavior of running all test fixtures in the file
    unittest.main()

if __name__ == '__main__':
    main()
